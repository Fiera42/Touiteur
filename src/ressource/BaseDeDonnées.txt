TouiteurUser((primary)idUser, name, fullname, email, role, password)

Touit((primary)idTouit, (Foreign)idUser, text, date, note)

Tag((primary)idTag, tagName, description, nbUsage)

Image((primary)idImage, altImage, imagePath, (foreign)idTouit)
 
FollowUser(idUser, idFollower) //association

FollowTag(idTag, idFollower) //association

TouitTag(idTouit, idTag) //association

VoteTouit((primary)idTouit, (primary)idUser, eval) //association


Dépendances fonctionnelles

idUser -> name, fullname, email, role, password
(email, password) -> idUser
idTouit -> idUser, text, date, note
idTag -> tagName, nbUsage
image -> idImage, altImage, imagePath, idTouit
idUser <-> idFollower
idTouit <-> idTag
(idTouit, idUser) -> eval

Clés minimales

(idUser, idTouit)
(idUser, idTag)
(email, password, idTouit)
(email, password, idTag)
(idFollower, idTouit)
(idFollower, idTag)


Formes normales 

2NF : aucune clès primaire n'a de dépendance fonctionnelle sur un de ses attributs
3NF : Pas de 3ème forme car l'on peut récupéré un ID avec l'email et le mot de passe

Les DF :
idUser -> name, fullname, email, role, password
idTouit -> idUser, text, date, note
idTag -> tagName, nbUsage
image -> idImage, altImage, imagePath, idTouit
idUser <-> idFollower
idTouit <-> idTag
(idTouit, idUser) -> eval

Serait en 3ème forme normales

